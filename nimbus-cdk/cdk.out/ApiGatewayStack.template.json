{
 "Resources": {
  "PredictRestApiB33CDE4F": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "PredictRestApi"
   },
   "Metadata": {
    "aws:cdk:path": "ApiGatewayStack/PredictRestApi/Resource"
   }
  },
  "PredictRestApiDeployment49622637e10b9092c0c049e8ebf4a5f398aacf3b": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Automatically created by the RestApi construct",
    "RestApiId": {
     "Ref": "PredictRestApiB33CDE4F"
    }
   },
   "DependsOn": [
    "PredictRestApiGETBBFCD66A",
    "PredictRestApisecondpredictOPTIONS9D7F5B59",
    "PredictRestApisecondpredictPOSTD05DB959",
    "PredictRestApisecondpredict3DB7222A",
    "PredictRestApisecond7AC7CE85"
   ],
   "Metadata": {
    "aws:cdk:path": "ApiGatewayStack/PredictRestApi/Deployment/Resource"
   }
  },
  "PredictRestApiDeploymentStageprod3D359CF9": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "PredictRestApiDeployment49622637e10b9092c0c049e8ebf4a5f398aacf3b"
    },
    "RestApiId": {
     "Ref": "PredictRestApiB33CDE4F"
    },
    "StageName": "prod"
   },
   "Metadata": {
    "aws:cdk:path": "ApiGatewayStack/PredictRestApi/DeploymentStage.prod/Resource"
   }
  },
  "PredictRestApiGETApiPermissionApiGatewayStackPredictRestApi977BE848GETCE6283CF": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DefaultLambdaE5505F72",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "PredictRestApiB33CDE4F"
       },
       "/",
       {
        "Ref": "PredictRestApiDeploymentStageprod3D359CF9"
       },
       "/GET/"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiGatewayStack/PredictRestApi/Default/GET/ApiPermission.ApiGatewayStackPredictRestApi977BE848.GET.."
   }
  },
  "PredictRestApiGETApiPermissionTestApiGatewayStackPredictRestApi977BE848GET5BE957A3": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DefaultLambdaE5505F72",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "PredictRestApiB33CDE4F"
       },
       "/test-invoke-stage/GET/"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiGatewayStack/PredictRestApi/Default/GET/ApiPermission.Test.ApiGatewayStackPredictRestApi977BE848.GET.."
   }
  },
  "PredictRestApiGETBBFCD66A": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "DefaultLambdaE5505F72",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Fn::GetAtt": [
      "PredictRestApiB33CDE4F",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "PredictRestApiB33CDE4F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiGatewayStack/PredictRestApi/Default/GET/Resource"
   }
  },
  "PredictRestApisecond7AC7CE85": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "PredictRestApiB33CDE4F",
      "RootResourceId"
     ]
    },
    "PathPart": "second",
    "RestApiId": {
     "Ref": "PredictRestApiB33CDE4F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiGatewayStack/PredictRestApi/Default/second/Resource"
   }
  },
  "PredictRestApisecondpredict3DB7222A": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "PredictRestApisecond7AC7CE85"
    },
    "PathPart": "predict",
    "RestApiId": {
     "Ref": "PredictRestApiB33CDE4F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiGatewayStack/PredictRestApi/Default/second/predict/Resource"
   }
  },
  "PredictRestApisecondpredictOPTIONS9D7F5B59": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'POST,OPTIONS'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "PredictRestApisecondpredict3DB7222A"
    },
    "RestApiId": {
     "Ref": "PredictRestApiB33CDE4F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiGatewayStack/PredictRestApi/Default/second/predict/OPTIONS/Resource"
   }
  },
  "PredictRestApisecondpredictPOSTApiPermissionApiGatewayStackPredictRestApi977BE848POSTsecondpredictB61C9C45": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "LambdasecondCD43C6FD",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "PredictRestApiB33CDE4F"
       },
       "/",
       {
        "Ref": "PredictRestApiDeploymentStageprod3D359CF9"
       },
       "/POST/second/predict"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiGatewayStack/PredictRestApi/Default/second/predict/POST/ApiPermission.ApiGatewayStackPredictRestApi977BE848.POST..second.predict"
   }
  },
  "PredictRestApisecondpredictPOSTApiPermissionTestApiGatewayStackPredictRestApi977BE848POSTsecondpredictC6F3B995": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "LambdasecondCD43C6FD",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "PredictRestApiB33CDE4F"
       },
       "/test-invoke-stage/POST/second/predict"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiGatewayStack/PredictRestApi/Default/second/predict/POST/ApiPermission.Test.ApiGatewayStackPredictRestApi977BE848.POST..second.predict"
   }
  },
  "PredictRestApisecondpredictPOSTD05DB959": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "LambdasecondCD43C6FD",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "PredictRestApisecondpredict3DB7222A"
    },
    "RestApiId": {
     "Ref": "PredictRestApiB33CDE4F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiGatewayStack/PredictRestApi/Default/second/predict/POST/Resource"
   }
  },
  "DefaultLambdaServiceRole602B1F82": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ApiGatewayStack/DefaultLambda/ServiceRole/Resource"
   }
  },
  "DefaultLambdaE5505F72": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ZipFile": "exports.handler = async () => { return { statusCode: 200, body: \"No model deployed yet.\" }; }"
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "DefaultLambdaServiceRole602B1F82",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x"
   },
   "DependsOn": [
    "DefaultLambdaServiceRole602B1F82"
   ],
   "Metadata": {
    "aws:cdk:path": "ApiGatewayStack/DefaultLambda/Resource"
   }
  },
  "LambdasecondServiceRoleC8038992": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ApiGatewayStack/Lambda_second/ServiceRole/Resource"
   }
  },
  "LambdasecondCD43C6FD": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:8435596ec4b7d2513c9f0bf9b403acce6671439cba40dfba3a3f1b847e605614"
     }
    },
    "MemorySize": 3008,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "LambdasecondServiceRoleC8038992",
      "Arn"
     ]
    },
    "Timeout": 60
   },
   "DependsOn": [
    "LambdasecondServiceRoleC8038992"
   ],
   "Metadata": {
    "aws:cdk:path": "ApiGatewayStack/Lambda_second/Resource",
    "aws:asset:path": "asset.8435596ec4b7d2513c9f0bf9b403acce6671439cba40dfba3a3f1b847e605614",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/71UbWvbMBD+LfXHoXhLB2PkW9oyKFvXkPRbCeUqXRM11sskecUz/u87ybKdFjY2yvbJ8r08d/c8J52W84/zcn4CT37GxWFWyfuy3QTgB0amuxas3EHAJ2jKdo0+LK28bQvXn76CwmJRvClYIdBWprm2QRrti0Vb+AA7HAO6bsvOH3RGYBcpWqEOBCbQcydTZgajovnkMIDUU7jv0VhbgBA35ovZSQ7VpSgWt223/ef2NMTUDdvEIdMIgyn3/WL6lJeCGVFgasfxDDzekm/LrjDsjehZTa6MsQ/B9r5skDrgzsERUWbgO5PyCgSauKZIJ3+ge/53OWQPppR/09g8XNLrMzZr/FZLhxT9AJXHX8WzQqWWiAhLldFHbiNhofbnRuCofO9egSMaA7o85bbL6lw9Q/lbkNeRNWraJ4yiUg8W3LQGFsKeaodRoN94hwuSgDpWgboXULZkXKFT0nsqzT7Vmsce4rbUOsjx/u1Biyoql/74QEGPOmSxC8MPJKiiRTxC4hNhCpVxzYZkz4ZYwtTTAH8cSxRLUPRomCrSAt7XCsVZE3fLOqm5tFAtOTf1yEcfExOWfGSd1kuBpobFylSSy7wvx7Zm6fSRrv+rVC8YQXQMubsjSAy+PKJ4GS3RV67RGi8D0ZWuPbVJqdd1sHWYdic1Fh+ElBdfC6l3HdPEePno334/fV9+KN+dPHopZ1n8ct1/fwIbcHDSxgUAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "ApiGatewayStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "PredictRestApiEndpointCE56DB59": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "PredictRestApiB33CDE4F"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "PredictRestApiDeploymentStageprod3D359CF9"
      },
      "/"
     ]
    ]
   }
  },
  "ModelEndpointsecond": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "PredictRestApiB33CDE4F"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "PredictRestApiDeploymentStageprod3D359CF9"
      },
      "/second/predict"
     ]
    ]
   }
  },
  "RestApiUrl": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "PredictRestApiB33CDE4F"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "PredictRestApiDeploymentStageprod3D359CF9"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-3"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-4"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      }
     ]
    },
    {
     "Fn::Equals": [
      {
       "Ref": "AWS::Region"
      },
      "us-west-2"
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}