{
 "Resources": {
  "PredictRestApiB33CDE4F": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "PredictRestApi"
   },
   "Metadata": {
    "aws:cdk:path": "ApiGatewayStack/PredictRestApi/Resource"
   }
  },
  "PredictRestApiDeployment496226378ef38bbfe0ea81b26b424490f5463c08": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Automatically created by the RestApi construct",
    "RestApiId": {
     "Ref": "PredictRestApiB33CDE4F"
    }
   },
   "DependsOn": [
    "PredictRestApibahpredictPOST969BD360",
    "PredictRestApibahpredict213FAC27",
    "PredictRestApibahAFFDA586",
    "PredictRestApifirstpredictPOST125F3C1C",
    "PredictRestApifirstpredict1B8A806D",
    "PredictRestApifirst8D0D4BC0",
    "PredictRestApiGETBBFCD66A"
   ],
   "Metadata": {
    "aws:cdk:path": "ApiGatewayStack/PredictRestApi/Deployment/Resource"
   }
  },
  "PredictRestApiDeploymentStageprod3D359CF9": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "PredictRestApiDeployment496226378ef38bbfe0ea81b26b424490f5463c08"
    },
    "RestApiId": {
     "Ref": "PredictRestApiB33CDE4F"
    },
    "StageName": "prod"
   },
   "Metadata": {
    "aws:cdk:path": "ApiGatewayStack/PredictRestApi/DeploymentStage.prod/Resource"
   }
  },
  "PredictRestApiGETApiPermissionApiGatewayStackPredictRestApi977BE848GETCE6283CF": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DefaultLambdaE5505F72",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "PredictRestApiB33CDE4F"
       },
       "/",
       {
        "Ref": "PredictRestApiDeploymentStageprod3D359CF9"
       },
       "/GET/"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiGatewayStack/PredictRestApi/Default/GET/ApiPermission.ApiGatewayStackPredictRestApi977BE848.GET.."
   }
  },
  "PredictRestApiGETApiPermissionTestApiGatewayStackPredictRestApi977BE848GET5BE957A3": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DefaultLambdaE5505F72",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "PredictRestApiB33CDE4F"
       },
       "/test-invoke-stage/GET/"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiGatewayStack/PredictRestApi/Default/GET/ApiPermission.Test.ApiGatewayStackPredictRestApi977BE848.GET.."
   }
  },
  "PredictRestApiGETBBFCD66A": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "DefaultLambdaE5505F72",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Fn::GetAtt": [
      "PredictRestApiB33CDE4F",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "PredictRestApiB33CDE4F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiGatewayStack/PredictRestApi/Default/GET/Resource"
   }
  },
  "PredictRestApifirst8D0D4BC0": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "PredictRestApiB33CDE4F",
      "RootResourceId"
     ]
    },
    "PathPart": "first",
    "RestApiId": {
     "Ref": "PredictRestApiB33CDE4F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiGatewayStack/PredictRestApi/Default/first/Resource"
   }
  },
  "PredictRestApifirstpredict1B8A806D": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "PredictRestApifirst8D0D4BC0"
    },
    "PathPart": "predict",
    "RestApiId": {
     "Ref": "PredictRestApiB33CDE4F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiGatewayStack/PredictRestApi/Default/first/predict/Resource"
   }
  },
  "PredictRestApifirstpredictPOSTApiPermissionApiGatewayStackPredictRestApi977BE848POSTfirstpredictBC0FA5F2": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "LambdafirstEB895C7B",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "PredictRestApiB33CDE4F"
       },
       "/",
       {
        "Ref": "PredictRestApiDeploymentStageprod3D359CF9"
       },
       "/POST/first/predict"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiGatewayStack/PredictRestApi/Default/first/predict/POST/ApiPermission.ApiGatewayStackPredictRestApi977BE848.POST..first.predict"
   }
  },
  "PredictRestApifirstpredictPOSTApiPermissionTestApiGatewayStackPredictRestApi977BE848POSTfirstpredict2E18475B": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "LambdafirstEB895C7B",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "PredictRestApiB33CDE4F"
       },
       "/test-invoke-stage/POST/first/predict"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiGatewayStack/PredictRestApi/Default/first/predict/POST/ApiPermission.Test.ApiGatewayStackPredictRestApi977BE848.POST..first.predict"
   }
  },
  "PredictRestApifirstpredictPOST125F3C1C": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "LambdafirstEB895C7B",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "PredictRestApifirstpredict1B8A806D"
    },
    "RestApiId": {
     "Ref": "PredictRestApiB33CDE4F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiGatewayStack/PredictRestApi/Default/first/predict/POST/Resource"
   }
  },
  "PredictRestApibahAFFDA586": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "PredictRestApiB33CDE4F",
      "RootResourceId"
     ]
    },
    "PathPart": "bah",
    "RestApiId": {
     "Ref": "PredictRestApiB33CDE4F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiGatewayStack/PredictRestApi/Default/bah/Resource"
   }
  },
  "PredictRestApibahpredict213FAC27": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "PredictRestApibahAFFDA586"
    },
    "PathPart": "predict",
    "RestApiId": {
     "Ref": "PredictRestApiB33CDE4F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiGatewayStack/PredictRestApi/Default/bah/predict/Resource"
   }
  },
  "PredictRestApibahpredictPOSTApiPermissionApiGatewayStackPredictRestApi977BE848POSTbahpredict1859035E": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "LambdabahF81554FB",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "PredictRestApiB33CDE4F"
       },
       "/",
       {
        "Ref": "PredictRestApiDeploymentStageprod3D359CF9"
       },
       "/POST/bah/predict"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiGatewayStack/PredictRestApi/Default/bah/predict/POST/ApiPermission.ApiGatewayStackPredictRestApi977BE848.POST..bah.predict"
   }
  },
  "PredictRestApibahpredictPOSTApiPermissionTestApiGatewayStackPredictRestApi977BE848POSTbahpredictA1B3DDC5": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "LambdabahF81554FB",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "PredictRestApiB33CDE4F"
       },
       "/test-invoke-stage/POST/bah/predict"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiGatewayStack/PredictRestApi/Default/bah/predict/POST/ApiPermission.Test.ApiGatewayStackPredictRestApi977BE848.POST..bah.predict"
   }
  },
  "PredictRestApibahpredictPOST969BD360": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "LambdabahF81554FB",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "PredictRestApibahpredict213FAC27"
    },
    "RestApiId": {
     "Ref": "PredictRestApiB33CDE4F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiGatewayStack/PredictRestApi/Default/bah/predict/POST/Resource"
   }
  },
  "DefaultLambdaServiceRole602B1F82": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ApiGatewayStack/DefaultLambda/ServiceRole/Resource"
   }
  },
  "DefaultLambdaE5505F72": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ZipFile": "exports.handler = async () => { return { statusCode: 200, body: \"No model deployed yet.\" }; }"
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "DefaultLambdaServiceRole602B1F82",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x"
   },
   "DependsOn": [
    "DefaultLambdaServiceRole602B1F82"
   ],
   "Metadata": {
    "aws:cdk:path": "ApiGatewayStack/DefaultLambda/Resource"
   }
  },
  "LambdafirstServiceRole1DAFBDD4": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ApiGatewayStack/Lambda_first/ServiceRole/Resource"
   }
  },
  "LambdafirstEB895C7B": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:830c8ddfb39fd27e07d1bb4ee4ace37e5e0c2791c7c3055260e87fa75663bc2d"
     }
    },
    "MemorySize": 3008,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "LambdafirstServiceRole1DAFBDD4",
      "Arn"
     ]
    },
    "Timeout": 60
   },
   "DependsOn": [
    "LambdafirstServiceRole1DAFBDD4"
   ],
   "Metadata": {
    "aws:cdk:path": "ApiGatewayStack/Lambda_first/Resource",
    "aws:asset:path": "asset.830c8ddfb39fd27e07d1bb4ee4ace37e5e0c2791c7c3055260e87fa75663bc2d",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "LambdabahServiceRoleFB051D9A": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ApiGatewayStack/Lambda_bah/ServiceRole/Resource"
   }
  },
  "LambdabahF81554FB": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:bcc340c3d4c54e94cd98c118f3b9bcdbe9751b199850958cf45f814966704a81"
     }
    },
    "MemorySize": 3008,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "LambdabahServiceRoleFB051D9A",
      "Arn"
     ]
    },
    "Timeout": 60
   },
   "DependsOn": [
    "LambdabahServiceRoleFB051D9A"
   ],
   "Metadata": {
    "aws:cdk:path": "ApiGatewayStack/Lambda_bah/Resource",
    "aws:asset:path": "asset.bcc340c3d4c54e94cd98c118f3b9bcdbe9751b199850958cf45f814966704a81",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/91UTW/bMAz9LdVxULSlh6HIzV0xoMC2BsluQVCwEuewsSVBkld4hv/7JPkr3X3osINh+5F8JB8pXYv1zVqsr+DFr6Q6ryp6Et0+gDzzCD12YKmEgC/Qim6HPhSWDh1zw9c3qJFt2DvGmUJbmfbBBjLas03HfIASZ4e+P/JPP/TIwO+yd406RDKFXjrKkSNZTDp+OQxAenH3AxvvGCj13XwxJUmo7hXbHLr++M/huemler5PouSWJ2js8w+1clx25lEy0ziJt+DxEG1H/hXDyahhCtk0cpxCsINtBEgHLB1cCGum+YwivjlDbnQImDuNnVlwizYWwmkLLsw5/5J12tBcRM8rqJ8UiC6CW3Q1eR/L5p8bLVP9Sf5GB5oPwAm0qtCNf9Koy1FOUfzOyDO6+zpO9oJp9uasxtq4dk+/JiClMM3SwJv7xm0nqONtYKo0KvC+qVHdtunQW0dakoWqkNI0s86DTwoo5LwJfUwEOgqhtqYiSejToXmFtYXTc9L/MtWwc5Gi5yjdY6TE4MXFlhQJSTaxQ2s8hTiZfBXEMmPoQxNsE5ajkwsbniPPsekWIV32XMcBi2f//uf6Rlx/EB+vnj3RalxisRvevwGu130bDwYAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "ApiGatewayStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "PredictRestApiEndpointCE56DB59": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "PredictRestApiB33CDE4F"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "PredictRestApiDeploymentStageprod3D359CF9"
      },
      "/"
     ]
    ]
   }
  },
  "ModelEndpointfirst": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "PredictRestApiB33CDE4F"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "PredictRestApiDeploymentStageprod3D359CF9"
      },
      "/first/predict"
     ]
    ]
   }
  },
  "ModelEndpointbah": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "PredictRestApiB33CDE4F"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "PredictRestApiDeploymentStageprod3D359CF9"
      },
      "/bah/predict"
     ]
    ]
   }
  },
  "RestApiUrl": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "PredictRestApiB33CDE4F"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "PredictRestApiDeploymentStageprod3D359CF9"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-3"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-4"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      }
     ]
    },
    {
     "Fn::Equals": [
      {
       "Ref": "AWS::Region"
      },
      "us-west-2"
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}